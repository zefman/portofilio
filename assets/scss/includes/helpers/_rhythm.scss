/*------------------------------------*\
    #RHYTHM

    Dependancies: tools/mixins.scss

\*------------------------------------*/

.rhythmic-xxs {
    padding-top: rhythm( 0.25 );
    padding-bottom: rhythm( 0.25 );
}

.rhythmic-xs {
    padding-top: rhythm( 0.5 );
    padding-bottom: rhythm( 0.5 );
}
    .desktop-rhythmic-xs {
        @include respond-to( desktop ) {
            padding-top: rhythm( 0.5 );
            padding-bottom: rhythm( 0.5 );
        }
    }
    .mobile-rhythmic-xs {
        @include respond-to( mobile ) {
            padding-top: rhythm( 0.5 );
            padding-bottom: rhythm( 0.5 );
        }
    }

.rhythmic-s {
    padding-top: rhythm( 0.75 );
    padding-bottom: rhythm( 0.75 );
}

.rhythmic {
    padding-top: rhythm( 1 );
    padding-bottom: rhythm( 1 );
}

.rhythmic-l {
    padding-top: rhythm( 1.25 );
    padding-bottom: rhythm( 1.25 );
}

.rhythmic-xl {
    padding-top: rhythm( 1.5 );
    padding-bottom: rhythm( 1.5 );
}

.rhythmic-xxl {
    padding-top: rhythm( 2.5 );
    padding-bottom: rhythm( 2.5 );
}

.rhythmic-3xl {
    padding-top: rhythm( 3 );
    padding-bottom: rhythm( 3 );
}





.rhythmic-height-xxl {
    min-height: rhythm( 8 );
}





@for $i from 0 through 5 {

    .rhythm-m-#{$i} { margin-bottom: rhythm( $i ); }
    .rhythm-m-#{$i}-half { margin-bottom: rhythm( ( $i + 0.5 ) ); }

    .rhythm-m-#{$i}--top { margin-top: rhythm( $i ); }
    .rhythm-m-#{$i}-half--top { margin-top: rhythm( ( $i + 0.5 ) ); }

    .rhythm-p-#{$i} { padding-bottom: rhythm( $i ); }
    .rhythm-p-#{$i}-half { padding-bottom: rhythm( ( $i + 0.5 ) ); }

}

@for $i from 0 through 5 {

    .rhythm-p-#{$i}--top { padding-top: rhythm( $i ); }
    .rhythm-p-#{$i}-half--top { padding-top: rhythm( ( $i + 0.5 ) ); }

}

@for $i from 0 through 5 {

    @each $breakpoint in $breakpoints {

        @media #{ nth( $breakpoint, 2 ) } {

            .#{ nth( $breakpoint, 1 ) }-rhythm-m-#{$i} { margin-bottom: rhythm( $i ); }
            .#{ nth( $breakpoint, 1 ) }-rhythm-m-#{$i}-half { margin-bottom: rhythm( ( $i + 0.5 ) ); }

            .#{ nth( $breakpoint, 1 ) }-rhythm-m-#{$i}--top { margin-top: rhythm( $i ); }
            .#{ nth( $breakpoint, 1 ) }-rhythm-m-#{$i}-half--top { margin-top: rhythm( ( $i + 0.5 ) ); }

            .#{ nth( $breakpoint, 1 ) }-rhythm-p-#{$i} { padding-bottom: rhythm( $i ); }
            .#{ nth( $breakpoint, 1 ) }-rhythm-p-#{$i}-half { padding-bottom: rhythm( ( $i + 0.5 ) ); }

        }

    }

}

@each $breakpoint in $breakpoints {

    @media #{ nth( $breakpoint, 2 ) } {

        .#{ nth( $breakpoint, 1 ) }-rhythmic-xxs { padding-top: rhythm( 0.25 ); padding-bottom: rhythm( 0.25 ); }
        .#{ nth( $breakpoint, 1 ) }-rhythmic-xs { padding-top: rhythm( 0.5 ); padding-bottom: rhythm( 0.5 ); }
        .#{ nth( $breakpoint, 1 ) }-rhythmic-s { padding-top: rhythm( 0.75 ); padding-bottom: rhythm( 0.75 ); }
        .#{ nth( $breakpoint, 1 ) }-rhythmic { padding-top: rhythm( 1 ); padding-bottom: rhythm( 1 ); }
        .#{ nth( $breakpoint, 1 ) }-rhythmic-l { padding-top: rhythm( 1.25 ); padding-bottom: rhythm( 1.25 ); }
        .#{ nth( $breakpoint, 1 ) }-rhythmic-xl { padding-top: rhythm( 1.5 ); padding-bottom: rhythm( 1.5 ); }
        .#{ nth( $breakpoint, 1 ) }-rhythmic-xxl { padding-top: rhythm( 2.5 ); padding-bottom: rhythm( 2.5 );}

    }

}




.gutted-xxs {
    padding-right: gutter( 0.25 );
    padding-left: gutter( 0.25 );
}

.gutted-xs {
    padding-right: gutter( 0.5 );
    padding-left: gutter( 0.5 );
}

.gutted-s {
    padding-right: gutter( 0.75 );
    padding-left: gutter( 0.75 );
}

.gutted {
    padding-right: gutter( 1 );
    padding-left: gutter( 1 );
}

.gutted-l {
    padding-right: gutter( 1.25 );
    padding-left: gutter( 1.25 );
}

.gutted-xl {
    padding-right: gutter( 1.5 );
    padding-left: gutter( 1.5 );
}

.gutted-xxl {
    padding-right: gutter( 1.75 );
    padding-left: gutter( 1.75 );
}



@each $breakpoint in $breakpoints {

    @media #{ nth( $breakpoint, 2 ) } {

        .#{ nth( $breakpoint, 1 ) }-gutted-xxs { padding-right: gutter( 0.25 ); padding-left: gutter( 0.25 ); }
        .#{ nth( $breakpoint, 1 ) }-gutted-xs { padding-right: gutter( 0.5 ); padding-left: gutter( 0.5 ); }
        .#{ nth( $breakpoint, 1 ) }-gutted-s { padding-right: gutter( 0.75 ); padding-left: gutter( 0.75 ); }
        .#{ nth( $breakpoint, 1 ) }-gutted { padding-right: gutter( 1 ); padding-left: gutter( 1 ); }
        .#{ nth( $breakpoint, 1 ) }-gutted-l { padding-right: gutter( 1.25 ); padding-left: gutter( 1.25 ); }
        .#{ nth( $breakpoint, 1 ) }-gutted-xl { padding-right: gutter( 1.5 ); padding-left: gutter( 1.5 ); }
        .#{ nth( $breakpoint, 1 ) }-gutted-xxl { padding-right: gutter( 2.5 ); padding-left: gutter( 2.5 );}

    }

}



.gutted-right-xxs {
    padding-right: gutter( 0.25 );
}

.gutted-right-xs {
    padding-right: gutter( 0.5 );
}

.gutted-right-s {
    padding-right: gutter( 0.75 );
}

.gutted-right {
    padding-right: gutter( 1 );
}

.gutted-right-l {
    padding-right: gutter( 1.25 );
}




.gutted-left-xxs {
    padding-left: gutter( 0.25 );
}

.gutted-left-xs {
    padding-left: gutter( 0.5 );
}

.gutted-left-s {
    padding-left: gutter( 0.75 );
}

.gutted-left {
    padding-left: gutter( 1 );
}


.gutted-m-right-xxs {
    margin-right: gutter( 0.25 );
}

.gutted-m-right-xs {
    margin-right: gutter( 0.5 );
}

.gutted-m-right-s {
    margin-right: gutter( 0.75 );
}

.gutted-m-right {
    margin-right: gutter( 1 );
}




.gutted-left-xxs {
    padding-left: gutter( 0.25 );
}

.gutted-left-xs {
    padding-left: gutter( 0.5 );
}

.gutted-left-s {
    padding-left: gutter( 0.75 );
}

.gutted-left {
    padding-left: gutter( 1 );
}


.gutted-m-left-xxs {
    margin-left: gutter( 0.25 );
}

.gutted-m-left-xs {
    margin-left: gutter( 0.5 );
}

.gutted-m-left-s {
    margin-left: gutter( 0.75 );
}

.gutted-m-left {
    margin-left: gutter( 1 );
}

.gutted-m-left-l {
    margin-left: gutter( 1.25 );
}

.gutted-m-left-xl {
    margin-left: gutter( 1.5 );
}

.gutted-m-left-xxl {
    margin-left: gutter( 1.75 );
}



/*------------------------------------*\
    #BOTH
\*------------------------------------*/

.flush {
    margin: 0 !important;
}

@each $breakpoint in $breakpoints {

    @media #{ nth( $breakpoint, 2 ) } {
        .#{ nth( $breakpoint, 1 ) }-flush { margin: 0 !important; }
    }

}


.tight {
    padding: 0 !important;
}

@each $breakpoint in $breakpoints {

    @media #{ nth( $breakpoint, 2 ) } {
        .#{ nth( $breakpoint, 1 ) }-tight { padding: 0 !important; }
    }

}


// Helper class to account for fixed header with padding-top
.padding-header {
    padding-top: rhythm( 6 ); // temporary?
}