/*------------------------------------*\
    #ANIMATIONS

    Dependencies:

\*------------------------------------*/

/*
 * Derived from https://daneden.github.io/animate.css/
 */

.animate {
    animation-duration: 0.5s;
    animation-iteration-count: 1;
    animation-fill-mode: both;
}


.animate--infinite {
    animation-iteration-count: infinite;
}



.animate--fade-in {
    animation-name: fade-in;
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}



.animate--fade-in-up {
    animation-name: fade-in-up;
    transform-origin: center center;
}

@keyframes fade-in-up {
    0% {
        opacity: 0;
        transform: translate3d( 0, 0px, 0 ) scale( 0.9 );
    }

    100% {
        opacity: 1;
        transform: translate3d( 0, 0, 0 );
    }
}



.animate--scaleY {
    animation-name: scaleY;
}

@keyframes scaleY {
    0% {
        transform: scaleY( 0 );
        opacity: 0;
    }

    100% {
        transform: scaleY( 1 );
        opacity: 1;
    }
}



.animate--fadeInRight {
    animation-name: fadeInRight;
}

@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translate3d( 100px, 0, 0 );
    }

    100% {
        opacity: 1;
        transform: translate3d( 0, 0, 0 );
    }
}



.animate--fadeInRightFast {
    animation-name: fadeInRightFast;
}

@keyframes fadeInRightFast {
    0% {
        opacity: 0;
        transform: translate3d( 50px, 0, 0 );
    }

    100% {
        opacity: 1;
        transform: translate3d( 0, 0, 0 );
    }
}



.animate--fadeInLeftFast {
    animation-name: fadeInLeftFast;
}

@keyframes fadeInLeftFast {
    0% {
        opacity: 1;
        transform: translate3d( 0, 0, 0 );
    }

    100% {
        opacity: 0;
        transform: translate3d( 50px, 0, 0 );
    }
}



.animate--expandWidth {
    animation-name: expandWidth;
}

@keyframes expandWidth {
    0% {
        width: 0;
        margin-left: 50%;
    }

    100% {
        width: 100%;
        margin-left: 0;
    }
}



/*------------------------------------*\
    #Animation delays
\*------------------------------------*/

@for $i from 1 through 30 {
    .animate--delay-#{$i} {
        animation-delay: #{$i * 100}ms;
    }

    .animate--delay:nth-of-type(#{$i}) {
        animation-delay: #{$i * 200}ms;
    }
}



/*------------------------------------*\
    #Animation durations
\*------------------------------------*/

@for $i from 1 through 30 {
    .animate--dur-#{$i} {
        animation-duration: #{$i / 10}s;
    }
}
